CIS v1.3.0:
  3.3:
    rql1: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'aws' AND api.name = 'aws-s3api-get-bucket-acl' AND json.rule = ((((acl.grants[?(@.grantee=='AllUsers')] size > 0) or policyStatus.isPublic is true) and publicAccessBlockConfiguration does not exist and accountLevelPublicAccessBlockConfiguration does not exist) or ((acl.grants[?(@.grantee=='AllUsers')] size > 0) and ((publicAccessBlockConfiguration.ignorePublicAcls is false and accountLevelPublicAccessBlockConfiguration does not exist) or (publicAccessBlockConfiguration does not exist and accountLevelPublicAccessBlockConfiguration.ignorePublicAcls is false) or (publicAccessBlockConfiguration.ignorePublicAcls is false and accountLevelPublicAccessBlockConfiguration.ignorePublicAcls is false))) or (policyStatus.isPublic is true and ((publicAccessBlockConfiguration.restrictPublicBuckets is false and accountLevelPublicAccessBlockConfiguration does not exist) or (publicAccessBlockConfiguration does not exist and accountLevelPublicAccessBlockConfiguration.restrictPublicBuckets is false) or (publicAccessBlockConfiguration.restrictPublicBuckets is false and accountLevelPublicAccessBlockConfiguration.restrictPublicBuckets is false))))\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    rql2: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'aws' AND api.name = 'aws-cloudtrail-describe-trails'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    left_on: "bucketName"
    right_on: "s3BucketName"
    info: "\nCompliance standard: CIS v1.3.0 (AWS)\nSection: 3.3\nEnsure the S3 bucket used to store CloudTrail logs is not publicly accessible\n" 
  1.16:
    rql1: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'aws' AND api.name = 'aws-iam-get-policy-version' AND json.rule = isAttached is true and document.Statement[?any(Action anyStartWith * and Resource equals * and Effect equals Allow)] exists and (policyArn exists and policyArn does not contain iam::aws:policy/AdministratorAccess)\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    rql2: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'aws' AND api.name = 'aws-iam-get-policy-version'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    left_on: "policyArn"
    right_on: "policyArn"
    info: "\nCompliance standard: CIS v1.3.0 (AWS)\nSection: 1.16\nEnsure IAM policies that allow full \"*:*\" administrative privileges are not attached\n" 
  1.12:
    rql1: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'aws' AND api.name = 'aws-iam-get-credential-report' AND json.rule = '(access_key_1_active is true and ((access_key_1_last_used_date != N/A and _DateTime.ageInDays(access_key_1_last_used_date) > 45) or (access_key_1_last_used_date == N/A and access_key_1_last_rotated != N/A and _DateTime.ageInDays(access_key_1_last_rotated) > 45))) or (access_key_2_active is true and ((access_key_2_last_used_date != N/A and _DateTime.ageInDays(access_key_2_last_used_date) > 45) or (access_key_2_last_used_date == N/A and access_key_2_last_rotated != N/A and _DateTime.ageInDays(access_key_2_last_rotated) > 45)))'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    rql2: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'aws' AND api.name = 'aws-iam-get-credential-report'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    left_on: "arn"
    right_on: "arn"
    info: "\nCompliance standard: CIS v1.3.0 (AWS)\nSection: 1.12\nEnsure credentials unused for 90 days or greater are disabled\n"
  1.13:
    rql1: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'aws' AND api.name = 'aws-iam-get-credential-report' AND json.rule = 'access_key_1_active is true and access_key_2_active is true'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    rql2: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'aws' AND api.name = 'aws-iam-get-credential-report'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    left_on: "arn"
    right_on: "arn"
    info: "\nCompliance standard: CIS v1.3.0 (AWS)\nSection: 1.13\nEnsure there is only one active access key available for any single IAM user\n"
  1.14:
    rql1: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'aws' AND api.name = 'aws-iam-get-credential-report' AND json.rule = '(access_key_1_active is true and access_key_1_last_rotated != N/A and _DateTime.ageInDays(access_key_1_last_rotated) > 90) or (access_key_2_active is true and access_key_2_last_rotated != N/A and _DateTime.ageInDays(access_key_2_last_rotated) > 90)'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    rql2: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'aws' AND api.name = 'aws-iam-get-credential-report'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    left_on: "arn"
    right_on: "arn"
    info: "\nCompliance standard: CIS v1.3.0 (AWS)\nSection: 1.14\nEnsure access keys are rotated every 90 days or less\n"
CIS v1.3.0 (Azure):
  9.9:
    rql1: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'azure' AND api.name = 'azure-app-service' AND json.rule = 'kind starts with app and config.http20Enabled equals false'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    rql2: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'azure' AND api.name = 'azure-app-service'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    left_on: "id"
    right_on: "id"
    info: "\nCompliance standard: CIS v1.3.0 (Azure)\nSection: 9.9\nEnsure that 'HTTP Version' is the latest, if used to run the web app\n"
  9.3:
    rql1: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'azure' AND api.name = 'azure-app-service' AND json.rule = 'kind starts with app and config.minTlsVersion does not equal 1.2'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    rql2: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'azure' AND api.name = 'azure-app-service'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    left_on: "id"
    right_on: "id"
    info: "\nCompliance standard: CIS v1.3.0 (Azure)\nSection: 9.3\nEnsure web app is using the latest version of TLS encryption\n"
  9.7:
    rql1: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'azure' AND api.name = 'azure-app-service' AND json.rule = 'config.isPythonVersionLatest exists and config.isPythonVersionLatest equals false'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    rql2: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'azure' AND api.name = 'azure-app-service'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    left_on: "id"
    right_on: "id"
    info: "\nCompliance standard: CIS v1.3.0 (Azure)\nSection: 9.7\nEnsure that 'Python version' is the latest, if used to run the web app\n"
  9.6:
    rql1: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'azure' AND api.name = 'azure-app-service' AND json.rule = 'config.isPhpVersionLatest exists and config.isPhpVersionLatest equals false'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    rql2: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'azure' AND api.name = 'azure-app-service'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    left_on: "id"
    right_on: "id"
    info: "\nCompliance standard: CIS v1.3.0 (Azure)\nSection: 9.6\nEnsure that 'PHP version' is the latest, if used to run the web app\n"
  9.8:
    rql1: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'azure' AND api.name = 'azure-app-service' AND json.rule = 'properties.state equals Running and ((config.javaVersion exists and config.javaVersion does not equal 1.8 and config.javaVersion does not equal 11 and config.javaVersion does not equal 17) or (config.linuxFxVersion is not empty and config.linuxFxVersion contains JAVA and (config.linuxFxVersion contains 8 or config.linuxFxVersion contains 11 or config.linuxFxVersion contains 17) and config.linuxFxVersion does not contain 8-jre8 and config.linuxFxVersion does not contain 11-java11 and config.linuxFxVersion does not contain 17-java17) or (config.linuxFxVersion is not empty and config.linuxFxVersion contains JBOSSEAP and config.linuxFxVersion does not contain 7-java8 and config.linuxFxVersion does not contain 7-java11 and config.linuxFxVersion does not contain 7-java17) or (config.linuxFxVersion contains TOMCAT and config.linuxFxVersion does not end with 10.0-jre8 and config.linuxFxVersion does not end with 9.0-jre8 and config.linuxFxVersion does not end with 8.5-jre8 and config.linuxFxVersion does not end with 10.0-java11 and config.linuxFxVersion does not end with 9.0-java11 and config.linuxFxVersion does not end with 8.5-java11 and config.linuxFxVersion does not end with 10.0-java17 and config.linuxFxVersion does not end with 9.0-java17 and config.linuxFxVersion does not end with 8.5-java17))'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    rql2: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'azure' AND api.name = 'azure-app-service'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    left_on: "id"
    right_on: "id"
    info: "\nCompliance standard: CIS v1.3.0 (Azure)\nSection: 9.8\nEnsure that 'Java version' is the latest, if used to run the web app\n"
  5.3:
    rql1: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'azure' AND api.name = 'azure-key-vault-list' AND json.rule = diagnosticSettings.value[*] size equals 0\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    rql2: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'azure' AND api.name = 'azure-key-vault-list'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    left_on: "id"
    right_on: "id"
    info: "\nCompliance standard: CIS v1.3.0 (Azure)\nSection: 5.3\nEnsure that Diagnostic Logs are enabled for all services which support it\n"
  5.1.5:
    rql1: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'azure' AND api.name = 'azure-key-vault-list' AND json.rule = 'not ( diagnosticSettings.value[*].properties.logs[*].enabled any equal true and diagnosticSettings.value[*].properties.logs[*].enabled size greater than 0 )'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    rql2: "{\r\n  \"query\":\"config from cloud.resource where cloud.accountgroup = '%s' AND cloud.type = 'azure' AND api.name = 'azure-key-vault-list'\",\r\n  \"timeRange\":{\"type\":\"to_now\",\"value\":\"epoch\"},\r\n    \"heuristicSearch\":true\r\n}"
    left_on: "id"
    right_on: "id"
    info: "\nCompliance standard: CIS v1.3.0 (Azure)\nSection: 5.1.5\nEnsure that logging for Azure KeyVault is 'Enabled'\n"